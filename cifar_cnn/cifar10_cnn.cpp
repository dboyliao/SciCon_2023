/* Auto-generated by utensor cli */
#include "uTensor.h"
#include "params_cifar10_cnn.hpp"
#include "cifar10_cnn.hpp"


Cifar10Cnn::Cifar10Cnn () :
op_Conv2dOperator_000({ 1, 2, 2, 1 }, VALID)
, op_ReLUOperator_001()
, op_FullyConnectedOperator_002(Fuseable::NoActivation<float>)
, op_Conv2dOperator_003({ 1, 1, 1, 1 }, SAME)
, op_AddOperator_004()
, op_ReshapeOperator_005({ 1, 128 })
, op_MaxPoolOperator_006({ 2, 2 }, { 1, 2, 2, 1 }, VALID)
, op_Conv2dOperator_007({ 1, 1, 1, 1 }, VALID)
{
  // Context::get_default_context()->set_ram_data_allocator(&ram_allocator);
  // Context::get_default_context()->set_metadata_allocator(&metadata_allocator);
  // TODO: moving ROMTensor declarations here
}

void Cifar10Cnn::compute()
{
  // update context in case there are multiple models being run
  Context::get_default_context()->set_ram_data_allocator(&ram_allocator);
  Context::get_default_context()->set_metadata_allocator(&metadata_allocator);
  // start rendering local snippets
  Tensor t_convVariable0 = new RomTensor({ 2, 2, 3, 16 }, flt, data_conv_Variable_0);


  Tensor t_convfeature_map0 = new RamTensor({ 1, 31, 31, 16 }, flt);


  op_Conv2dOperator_007
    .set_inputs({
        { ReferenceOperators::Conv2dOperator<float>::in, inputs[input_0].tensor() },
        { ReferenceOperators::Conv2dOperator<float>::filter, t_convVariable0 },
    })
    .set_outputs({
        { ReferenceOperators::Conv2dOperator<float>::out, t_convfeature_map0}
    })
    .eval();

  t_convVariable0.free();

  Tensor t_convbias0 = new RomTensor({ 16 }, flt, data_conv_bias_0);


  Tensor t_convlogits0 = new RamTensor({ 1, 31, 31, 16 }, flt);


  op_AddOperator_004
    .set_inputs({
        { ReferenceOperators::AddOperator<float>::a, t_convfeature_map0 },
        { ReferenceOperators::AddOperator<float>::b, t_convbias0 },
    })
    .set_outputs({
        { ReferenceOperators::AddOperator<float>::c, t_convlogits0}
    })
    .eval();

  t_convbias0.free();

  t_convfeature_map0.free();

  Tensor t_conv_1Variable0 = new RomTensor({ 3, 3, 16, 32 }, flt, data_conv_1_Variable_0);


  Tensor t_conv_1feature_map0 = new RamTensor({ 1, 29, 29, 32 }, flt);


  op_Conv2dOperator_007
    .set_inputs({
        { ReferenceOperators::Conv2dOperator<float>::in, t_convlogits0 },
        { ReferenceOperators::Conv2dOperator<float>::filter, t_conv_1Variable0 },
    })
    .set_outputs({
        { ReferenceOperators::Conv2dOperator<float>::out, t_conv_1feature_map0}
    })
    .eval();

  t_conv_1Variable0.free();

  t_convlogits0.free();

  Tensor t_conv_1bias0 = new RomTensor({ 32 }, flt, data_conv_1_bias_0);


  Tensor t_conv_1logits0 = new RamTensor({ 1, 29, 29, 32 }, flt);


  op_AddOperator_004
    .set_inputs({
        { ReferenceOperators::AddOperator<float>::a, t_conv_1feature_map0 },
        { ReferenceOperators::AddOperator<float>::b, t_conv_1bias0 },
    })
    .set_outputs({
        { ReferenceOperators::AddOperator<float>::c, t_conv_1logits0}
    })
    .eval();

  t_conv_1feature_map0.free();

  t_conv_1bias0.free();

  Tensor t_conv_1activation0 = new RamTensor({ 1, 29, 29, 32 }, flt);


  op_ReLUOperator_001
    .set_inputs({
        { ReferenceOperators::ReLUOperator<float>::in, t_conv_1logits0 },
    })
    .set_outputs({
        { ReferenceOperators::ReLUOperator<float>::out, t_conv_1activation0}
    })
    .eval();

  t_conv_1logits0.free();

  Tensor t_MaxPool0 = new RamTensor({ 1, 14, 14, 32 }, flt);


  op_MaxPoolOperator_006
    .set_inputs({
        { ReferenceOperators::MaxPoolOperator<float>::in, t_conv_1activation0 },
    })
    .set_outputs({
        { ReferenceOperators::MaxPoolOperator<float>::out, t_MaxPool0}
    })
    .eval();

  t_conv_1activation0.free();

  Tensor t_conv_2Variable0 = new RomTensor({ 3, 3, 32, 32 }, flt, data_conv_2_Variable_0);


  Tensor t_conv_2feature_map0 = new RamTensor({ 1, 6, 6, 32 }, flt);


  op_Conv2dOperator_000
    .set_inputs({
        { ReferenceOperators::Conv2dOperator<float>::in, t_MaxPool0 },
        { ReferenceOperators::Conv2dOperator<float>::filter, t_conv_2Variable0 },
    })
    .set_outputs({
        { ReferenceOperators::Conv2dOperator<float>::out, t_conv_2feature_map0}
    })
    .eval();

  t_MaxPool0.free();

  t_conv_2Variable0.free();

  Tensor t_conv_2bias0 = new RomTensor({ 32 }, flt, data_conv_2_bias_0);


  Tensor t_conv_2logits0 = new RamTensor({ 1, 6, 6, 32 }, flt);


  op_AddOperator_004
    .set_inputs({
        { ReferenceOperators::AddOperator<float>::a, t_conv_2feature_map0 },
        { ReferenceOperators::AddOperator<float>::b, t_conv_2bias0 },
    })
    .set_outputs({
        { ReferenceOperators::AddOperator<float>::c, t_conv_2logits0}
    })
    .eval();

  t_conv_2bias0.free();

  t_conv_2feature_map0.free();

  Tensor t_conv_3Variable0 = new RomTensor({ 3, 3, 32, 32 }, flt, data_conv_3_Variable_0);


  Tensor t_conv_3feature_map0 = new RamTensor({ 1, 2, 2, 32 }, flt);


  op_Conv2dOperator_000
    .set_inputs({
        { ReferenceOperators::Conv2dOperator<float>::in, t_conv_2logits0 },
        { ReferenceOperators::Conv2dOperator<float>::filter, t_conv_3Variable0 },
    })
    .set_outputs({
        { ReferenceOperators::Conv2dOperator<float>::out, t_conv_3feature_map0}
    })
    .eval();

  t_conv_3Variable0.free();

  t_conv_2logits0.free();

  Tensor t_conv_3bias0 = new RomTensor({ 32 }, flt, data_conv_3_bias_0);


  Tensor t_conv_3logits0 = new RamTensor({ 1, 2, 2, 32 }, flt);


  op_AddOperator_004
    .set_inputs({
        { ReferenceOperators::AddOperator<float>::a, t_conv_3feature_map0 },
        { ReferenceOperators::AddOperator<float>::b, t_conv_3bias0 },
    })
    .set_outputs({
        { ReferenceOperators::AddOperator<float>::c, t_conv_3logits0}
    })
    .eval();

  t_conv_3bias0.free();

  t_conv_3feature_map0.free();

  Tensor t_conv_3activation0 = new RamTensor({ 1, 2, 2, 32 }, flt);


  op_ReLUOperator_001
    .set_inputs({
        { ReferenceOperators::ReLUOperator<float>::in, t_conv_3logits0 },
    })
    .set_outputs({
        { ReferenceOperators::ReLUOperator<float>::out, t_conv_3activation0}
    })
    .eval();

  t_conv_3logits0.free();

  Tensor t_MaxPool_10 = new RamTensor({ 1, 1, 1, 1 }, flt);


  op_MaxPoolOperator_006
    .set_inputs({
        { ReferenceOperators::MaxPoolOperator<float>::in, t_conv_3activation0 },
    })
    .set_outputs({
        { ReferenceOperators::MaxPoolOperator<float>::out, t_MaxPool_10}
    })
    .eval();

  t_conv_3activation0.free();

  Tensor t_conv_4Variable0 = new RomTensor({ 1, 1, 32, 64 }, flt, data_conv_4_Variable_0);


  Tensor t_conv_4feature_map0 = new RamTensor({ 1, 1, 1, 64 }, flt);


  op_Conv2dOperator_007
    .set_inputs({
        { ReferenceOperators::Conv2dOperator<float>::in, t_MaxPool_10 },
        { ReferenceOperators::Conv2dOperator<float>::filter, t_conv_4Variable0 },
    })
    .set_outputs({
        { ReferenceOperators::Conv2dOperator<float>::out, t_conv_4feature_map0}
    })
    .eval();

  t_conv_4Variable0.free();

  t_MaxPool_10.free();

  Tensor t_conv_4bias0 = new RomTensor({ 64 }, flt, data_conv_4_bias_0);


  Tensor t_conv_4logits0 = new RamTensor({ 1, 1, 1, 64 }, flt);


  op_AddOperator_004
    .set_inputs({
        { ReferenceOperators::AddOperator<float>::a, t_conv_4feature_map0 },
        { ReferenceOperators::AddOperator<float>::b, t_conv_4bias0 },
    })
    .set_outputs({
        { ReferenceOperators::AddOperator<float>::c, t_conv_4logits0}
    })
    .eval();

  t_conv_4bias0.free();

  t_conv_4feature_map0.free();

  Tensor t_conv_4activation0 = new RamTensor({ 1, 1, 1, 64 }, flt);


  op_ReLUOperator_001
    .set_inputs({
        { ReferenceOperators::ReLUOperator<float>::in, t_conv_4logits0 },
    })
    .set_outputs({
        { ReferenceOperators::ReLUOperator<float>::out, t_conv_4activation0}
    })
    .eval();

  t_conv_4logits0.free();

  Tensor t_conv_5Variable0 = new RomTensor({ 1, 1, 64, 128 }, flt, data_conv_5_Variable_0);


  Tensor t_conv_5feature_map0 = new RamTensor({ 1, 1, 1, 128 }, flt);


  op_Conv2dOperator_003
    .set_inputs({
        { ReferenceOperators::Conv2dOperator<float>::in, t_conv_4activation0 },
        { ReferenceOperators::Conv2dOperator<float>::filter, t_conv_5Variable0 },
    })
    .set_outputs({
        { ReferenceOperators::Conv2dOperator<float>::out, t_conv_5feature_map0}
    })
    .eval();

  t_conv_5Variable0.free();

  t_conv_4activation0.free();

  Tensor t_conv_5bias0 = new RomTensor({ 128 }, flt, data_conv_5_bias_0);


  Tensor t_conv_5logits0 = new RamTensor({ 1, 1, 1, 128 }, flt);


  op_AddOperator_004
    .set_inputs({
        { ReferenceOperators::AddOperator<float>::a, t_conv_5feature_map0 },
        { ReferenceOperators::AddOperator<float>::b, t_conv_5bias0 },
    })
    .set_outputs({
        { ReferenceOperators::AddOperator<float>::c, t_conv_5logits0}
    })
    .eval();

  t_conv_5feature_map0.free();

  t_conv_5bias0.free();

  Tensor t_conv_5activation0 = new RamTensor({ 1, 1, 1, 128 }, flt);


  op_ReLUOperator_001
    .set_inputs({
        { ReferenceOperators::ReLUOperator<float>::in, t_conv_5logits0 },
    })
    .set_outputs({
        { ReferenceOperators::ReLUOperator<float>::out, t_conv_5activation0}
    })
    .eval();

  t_conv_5logits0.free();

  Tensor t_Reshape0 = new RamTensor({ 1, 128 }, flt);


  op_ReshapeOperator_005
    .set_inputs({
        { ReferenceOperators::ReshapeOperator<float>::input, t_conv_5activation0 },
    })
    .set_outputs({
        { ReferenceOperators::ReshapeOperator<float>::output, t_Reshape0}
    })
    .eval();

  t_conv_5activation0.free();

  Tensor t_fully_connectweight0 = new RomTensor({ 128, 128 }, flt, data_fully_connect_weight_0);


  Tensor t_fully_connectlogits0 = new RamTensor({ 1, 128 }, flt);


  op_FullyConnectedOperator_002
    .set_inputs({
        { ReferenceOperators::FullyConnectedOperator<float>::input, t_Reshape0 },
        { ReferenceOperators::FullyConnectedOperator<float>::filter, t_fully_connectweight0 },
    })
    .set_outputs({
        { ReferenceOperators::FullyConnectedOperator<float>::output, t_fully_connectlogits0}
    })
    .eval();

  t_fully_connectweight0.free();

  t_Reshape0.free();

  Tensor t_fully_connectactivation0 = new RamTensor({ 1, 128 }, flt);


  op_ReLUOperator_001
    .set_inputs({
        { ReferenceOperators::ReLUOperator<float>::in, t_fully_connectlogits0 },
    })
    .set_outputs({
        { ReferenceOperators::ReLUOperator<float>::out, t_fully_connectactivation0}
    })
    .eval();

  t_fully_connectlogits0.free();

  Tensor t_fully_connect_1weight0 = new RomTensor({ 128, 64 }, flt, data_fully_connect_1_weight_0);


  Tensor t_fully_connect_1logits0 = new RamTensor({ 1, 64 }, flt);


  op_FullyConnectedOperator_002
    .set_inputs({
        { ReferenceOperators::FullyConnectedOperator<float>::input, t_fully_connectactivation0 },
        { ReferenceOperators::FullyConnectedOperator<float>::filter, t_fully_connect_1weight0 },
    })
    .set_outputs({
        { ReferenceOperators::FullyConnectedOperator<float>::output, t_fully_connect_1logits0}
    })
    .eval();

  t_fully_connectactivation0.free();

  t_fully_connect_1weight0.free();

  Tensor t_fully_connect_1activation0 = new RamTensor({ 1, 64 }, flt);


  op_ReLUOperator_001
    .set_inputs({
        { ReferenceOperators::ReLUOperator<float>::in, t_fully_connect_1logits0 },
    })
    .set_outputs({
        { ReferenceOperators::ReLUOperator<float>::out, t_fully_connect_1activation0}
    })
    .eval();

  t_fully_connect_1logits0.free();

  Tensor t_fully_connect_2weight0 = new RomTensor({ 64, 10 }, flt, data_fully_connect_2_weight_0);


  op_FullyConnectedOperator_002
    .set_inputs({
        { ReferenceOperators::FullyConnectedOperator<float>::input, t_fully_connect_1activation0 },
        { ReferenceOperators::FullyConnectedOperator<float>::filter, t_fully_connect_2weight0 },
    })
    .set_outputs({
        { ReferenceOperators::FullyConnectedOperator<float>::output, outputs[output_0].tensor()}
    })
    .eval();

  t_fully_connect_2weight0.free();

  t_fully_connect_1activation0.free();
  // end of rendering local snippets
}