version: 2
jobs:
  build:
    docker:
      - image: mbartling/utensor_ci
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule sync
            git submodule update --init extern/googletest
            #git submodule init
            #git submodule update --remote
      - run: mkdir -p /tmp/coverage && mkdir -p /tmp/test_results
        #      - run: git clone https://github.com/ThrowTheSwitch/Unity.git unity_temp
        #      - run: mv unity_temp/* unity/
        #      - run: find TESTS -type f -exec sed -e 's/\/fs\//TESTS\//g' -i {} \;
        #      - run: find src/uTensor/core/ -type f -exec sed -e 's/\/fs\//\//g' -i {} \;
      - run:
          name: "Build"
          command: |
            mkdir build && cd build
            cmake -DPACKAGE_TESTS=ON -DENABLE_COVERAGE=ON ..
            make
      - run:
          name: "Test"
          command: |
            cd build
            ctest -VV -o /tmp/test_results/test-results.txt
          environment:
            GTEST_OUTPUT: xml:/tmp/test_results/

      - run:
          name: Generate code coverage
          command: |
            cd build
            rm -rf TESTS/extern
            lcov -c --directory TESTS --output-file main_coverage.info > /tmp/test_results/coverage_summary.txt
            genhtml main_coverage.info --output-directory /tmp/coverage
            # TODO Fix coveralls
            #coveralls -b TESTS -r TESTS --gcov-options '\-lp'
      - store_test_results:
          path: /tmp/test_results
      - store_artifacts:
          path: /tmp/coverage
          prefix: coverage
  local_test:
    docker:
      - image: mbartling/utensor_ci
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule sync
            git submodule update --init extern/googletest
            #git submodule init
            #git submodule update --remote
      - run: mkdir -p /tmp/coverage && mkdir -p /tmp/test_results
      - run:
          name: "Build and test"
          command: |
            mkdir build && cd build
            cmake -DPACKAGE_TESTS=ON -DENABLE_COVERAGE=ON ..
            make
            ctest -VV -o /tmp/test_results/test-results.txt
  mbedCI:
    docker:
      - image: mbartling/utensor-mbed-ci
    steps:
      - run: git clone https://github.com/uTensor/utensor-mnist-demo && cd utensor-mnist-demo && git checkout develop && cd .. && mv utensor-mnist-demo/* . && mv utensor-mnist-demo/.git . && rm -rf utensor-mnist-demo && rm uTensor.lib
      - run: mkdir -p uTensor
      - checkout:
          path: ./uTensor
      - run: mkdir -p /tmp/coverage && mkdir -p /tmp/test_results
        #      - run: git clone https://github.com/ThrowTheSwitch/Unity.git uTensor/unity_temp
        #- run: mv uTensor/unity_temp/* uTensor/unity/
      - run: mbed config root .
      - run: mbed deploy
      - run: mbed compile -m DISCO_F413ZH -t GCC_ARM --profile=uTensor/extras/build_profile/release.json
        
workflows:
    version: 2
    run_ci:
        jobs:
            - build
              #- mbedCI
